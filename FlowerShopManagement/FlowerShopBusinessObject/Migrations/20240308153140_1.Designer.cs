// <auto-generated />
using System;
using FlowerShopBusinessObject.DBContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FlowerShopBusinessObject.Migrations
{
    [DbContext(typeof(ApplicationDBContext))]
    [Migration("20240308153140_1")]
    partial class _1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FlowerShopBusinessObject.Entities.Account", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AccountPassword")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreateBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("EmailAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Role")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Accounts");

                    b.HasData(
                        new
                        {
                            Id = new Guid("d38a7009-fa0c-4fd1-815f-49879dfcbfb7"),
                            AccountPassword = "1@",
                            Created = new DateTime(2024, 3, 8, 22, 31, 40, 420, DateTimeKind.Local).AddTicks(4781),
                            EmailAddress = "vinnt@gmail.com",
                            FullName = "Administrator",
                            IsDeleted = false,
                            Role = 1
                        },
                        new
                        {
                            Id = new Guid("c71f13e6-3a8f-4bfa-975e-c05dac1707eb"),
                            AccountPassword = "1@",
                            Created = new DateTime(2024, 3, 8, 22, 31, 40, 420, DateTimeKind.Local).AddTicks(4811),
                            EmailAddress = "vinnt1@gmail.com",
                            FullName = "Staff",
                            IsDeleted = false,
                            Role = 2
                        },
                        new
                        {
                            Id = new Guid("4694a7a2-e609-4bfc-bd6f-6f082367181d"),
                            AccountPassword = "1@",
                            Created = new DateTime(2024, 3, 8, 22, 31, 40, 420, DateTimeKind.Local).AddTicks(4815),
                            EmailAddress = "vinnt2@gmail.com",
                            FullName = "Manager",
                            IsDeleted = false,
                            Role = 3
                        },
                        new
                        {
                            Id = new Guid("2477cb57-b562-469d-8f78-0a96663cb5e2"),
                            AccountPassword = "1@",
                            Created = new DateTime(2024, 3, 8, 22, 31, 40, 420, DateTimeKind.Local).AddTicks(4817),
                            EmailAddress = "vinnt3@gmail.com",
                            FullName = "Customer",
                            IsDeleted = false,
                            Role = 4
                        });
                });

            modelBuilder.Entity("FlowerShopBusinessObject.Entities.Category", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("CreateBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = new Guid("2c81c8f6-cae1-46a6-9bc4-71f29f6da74e"),
                            CategoryName = "Hoa Hồng Đỏ",
                            Created = new DateTime(2024, 3, 8, 22, 31, 40, 420, DateTimeKind.Local).AddTicks(5055),
                            Description = "Đỏ",
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("b7101212-c852-4be6-8eed-031b096b2dd4"),
                            CategoryName = "Hoa Hồng Đen",
                            Created = new DateTime(2024, 3, 8, 22, 31, 40, 420, DateTimeKind.Local).AddTicks(5074),
                            Description = "Đen",
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("cb85b07b-2fcc-497c-9007-8912a86c2f4f"),
                            CategoryName = "Hoa Lưu Ly",
                            Created = new DateTime(2024, 3, 8, 22, 31, 40, 420, DateTimeKind.Local).AddTicks(5077),
                            Description = "Lưu ly",
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("d302148f-1677-4094-8fa7-1c6b54ff8b69"),
                            CategoryName = "Hoa Lan",
                            Created = new DateTime(2024, 3, 8, 22, 31, 40, 420, DateTimeKind.Local).AddTicks(5078),
                            Description = "Lan",
                            IsDeleted = false
                        });
                });

            modelBuilder.Entity("FlowerShopBusinessObject.Entities.FlowerBouquet", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CategoryID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreateBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("FlowerBouquetName")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<int>("FlowerBouquetStatus")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("SupplierID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("UnitPrice")
                        .HasColumnType("int");

                    b.Property<int>("UnitsInStock")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoryID");

                    b.HasIndex("SupplierID");

                    b.ToTable("FlowerBouquet");

                    b.HasData(
                        new
                        {
                            Id = new Guid("6cb4dd24-4dec-4ec2-8dab-5d677f11cffb"),
                            CategoryID = new Guid("2c81c8f6-cae1-46a6-9bc4-71f29f6da74e"),
                            Created = new DateTime(2024, 3, 8, 22, 31, 40, 420, DateTimeKind.Local).AddTicks(5115),
                            Description = "This is Rose",
                            FlowerBouquetName = "Red Rose",
                            FlowerBouquetStatus = 1,
                            IsDeleted = false,
                            SupplierID = new Guid("fc1d6720-4461-418c-8680-8ad859eda033"),
                            UnitPrice = 100000,
                            UnitsInStock = 100
                        },
                        new
                        {
                            Id = new Guid("ccf6f1d5-beda-4832-8eae-1d82280693c0"),
                            CategoryID = new Guid("2c81c8f6-cae1-46a6-9bc4-71f29f6da74e"),
                            Created = new DateTime(2024, 3, 8, 22, 31, 40, 420, DateTimeKind.Local).AddTicks(5120),
                            Description = "This is Orchis",
                            FlowerBouquetName = "Orchis",
                            FlowerBouquetStatus = 1,
                            IsDeleted = false,
                            SupplierID = new Guid("fc1d6720-4461-418c-8680-8ad859eda033"),
                            UnitPrice = 100000,
                            UnitsInStock = 100
                        },
                        new
                        {
                            Id = new Guid("4cee7a0f-17f9-4f49-aa3c-8dce72b8abe1"),
                            CategoryID = new Guid("2c81c8f6-cae1-46a6-9bc4-71f29f6da74e"),
                            Created = new DateTime(2024, 3, 8, 22, 31, 40, 420, DateTimeKind.Local).AddTicks(5124),
                            Description = "This is Sun Flower",
                            FlowerBouquetName = "Sun Flower",
                            FlowerBouquetStatus = 1,
                            IsDeleted = false,
                            SupplierID = new Guid("fc1d6720-4461-418c-8680-8ad859eda033"),
                            UnitPrice = 100000,
                            UnitsInStock = 100
                        });
                });

            modelBuilder.Entity("FlowerShopBusinessObject.Entities.Order", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AccountID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreateBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("Freight")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("OrderStatus")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ShippedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AccountID");

                    b.ToTable("Order");
                });

            modelBuilder.Entity("FlowerShopBusinessObject.Entities.OrderDetail", b =>
                {
                    b.Property<Guid>("OrderID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("FlowerBouquetID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreateBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int>("Discount")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("UnitPrice")
                        .HasColumnType("int");

                    b.HasKey("OrderID", "FlowerBouquetID");

                    b.HasIndex("FlowerBouquetID");

                    b.ToTable("OrderDetail");
                });

            modelBuilder.Entity("FlowerShopBusinessObject.Entities.Supplier", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreateBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SupplierAddress")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("SupplierName")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("Telephone")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.HasKey("Id");

                    b.ToTable("Suppliers");

                    b.HasData(
                        new
                        {
                            Id = new Guid("fc1d6720-4461-418c-8680-8ad859eda033"),
                            Created = new DateTime(2024, 3, 8, 22, 31, 40, 420, DateTimeKind.Local).AddTicks(5096),
                            IsDeleted = false,
                            SupplierAddress = "FPT Ho Chi Minh",
                            SupplierName = "Nguyen Vi Shop",
                            Telephone = "0123456789"
                        },
                        new
                        {
                            Id = new Guid("f60db79f-1c7e-4b2b-a3f2-4551942ccdd6"),
                            Created = new DateTime(2024, 3, 8, 22, 31, 40, 420, DateTimeKind.Local).AddTicks(5101),
                            IsDeleted = false,
                            SupplierAddress = "FPT Ha Noi",
                            SupplierName = "Shop Nguyen Vi",
                            Telephone = "0123456789"
                        });
                });

            modelBuilder.Entity("FlowerShopBusinessObject.Entities.FlowerBouquet", b =>
                {
                    b.HasOne("FlowerShopBusinessObject.Entities.Category", "Category")
                        .WithMany("FlowerBouquets")
                        .HasForeignKey("CategoryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FlowerShopBusinessObject.Entities.Supplier", "Supplier")
                        .WithMany("FlowerBouquets")
                        .HasForeignKey("SupplierID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Supplier");
                });

            modelBuilder.Entity("FlowerShopBusinessObject.Entities.Order", b =>
                {
                    b.HasOne("FlowerShopBusinessObject.Entities.Account", "Account")
                        .WithMany("Orders")
                        .HasForeignKey("AccountID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");
                });

            modelBuilder.Entity("FlowerShopBusinessObject.Entities.OrderDetail", b =>
                {
                    b.HasOne("FlowerShopBusinessObject.Entities.FlowerBouquet", "FlowerBouquet")
                        .WithMany("OrderDetails")
                        .HasForeignKey("FlowerBouquetID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FlowerShopBusinessObject.Entities.Order", "Order")
                        .WithMany("OrderDetails")
                        .HasForeignKey("OrderID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FlowerBouquet");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("FlowerShopBusinessObject.Entities.Account", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("FlowerShopBusinessObject.Entities.Category", b =>
                {
                    b.Navigation("FlowerBouquets");
                });

            modelBuilder.Entity("FlowerShopBusinessObject.Entities.FlowerBouquet", b =>
                {
                    b.Navigation("OrderDetails");
                });

            modelBuilder.Entity("FlowerShopBusinessObject.Entities.Order", b =>
                {
                    b.Navigation("OrderDetails");
                });

            modelBuilder.Entity("FlowerShopBusinessObject.Entities.Supplier", b =>
                {
                    b.Navigation("FlowerBouquets");
                });
#pragma warning restore 612, 618
        }
    }
}
